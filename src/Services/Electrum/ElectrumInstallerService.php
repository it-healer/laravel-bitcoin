<?php

namespace ItHealer\LaravelBitcoin\Services\Electrum;

use Illuminate\Support\Facades\File;
use ItHealer\LaravelBitcoin\Services\BaseConsole;

class ElectrumInstallerService extends BaseConsole
{
    protected ?string $version = null;

    public function run(): void
    {
        parent::run();
        $this->install();
    }

    protected function install(): bool
    {
        $os = PHP_OS_FAMILY;
        $arch = strtolower(php_uname('m'));
        $this->log("–û–°: $os, –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $arch");

        $version = $this->resolveVersion();
        if (!$version) {
            $this->log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—Ç–∞–±–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é Electrum.', 'error');
            return false;
        }
        $this->log("üîé –í—ã–±—Ä–∞–Ω–∞ —Å—Ç–∞–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è Electrum: {$version}");

        $platformFile = $this->getPlatformFilename($version); // Electrum-<ver>.tar.gz
        if (!$platformFile) {
            $this->log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∏–º—è –∞—Ä—Ö–∏–≤–∞ Electrum.', 'error');
            return false;
        }

        $base = "https://download.electrum.org/{$version}";
        $url = "{$base}/{$platformFile}";
        $this->log("üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ: {$url}");

        // temp –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
        $tempRoot = '/tmp/electrum-src-'.time();
        if (!is_dir($tempRoot)) {
            File::makeDirectory($tempRoot, 0755, true, true);
        }
        $archivePath = $tempRoot.DIRECTORY_SEPARATOR.$platformFile;

        // —Ü–µ–ª–µ–≤–∞—è –ø–∞–ø–∫–∞: storage/app/electrum
        $targetDir = storage_path('app/electrum');
        if (!is_dir($targetDir)) {
            File::makeDirectory($targetDir, 0755, true, true);
        }

        // —Å–∫–∞—á–∏–≤–∞–µ–º
        $this->downloadWithProgress($url, $archivePath);
        $this->log("‚úÖ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: {$archivePath}", 'success');

        // —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∞ –ë–ï–ó –≤–ª–æ–∂–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –≤–µ—Ä—Å–∏–∏
        $this->log("üìÇ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ Electrum –≤ {$targetDir} (–±–µ–∑ –≤–ª–æ–∂–µ–Ω–Ω–æ–π –ø–∞–ø–∫–∏ –≤–µ—Ä—Å–∏–∏)...");
        // --strip-components=1 —É–¥–∞–ª–∏—Ç –≤–µ—Ä—Ö–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å 'Electrum-<ver>/'
        $cmd = "tar -xvf ".escapeshellarg($archivePath)." --strip-components=1 -C ".escapeshellarg($targetDir);
        $output = shell_exec($cmd." 2>&1");
        if ($output !== null) {
            $this->log($output);
        }
        $this->log("‚úÖ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞", 'success');

        // —É–¥–∞–ª—è–µ–º –∞—Ä—Ö–∏–≤ –∏ –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
        if (is_file($archivePath)) {
            @unlink($archivePath);
        }
        if (File::isDirectory($tempRoot)) {
            File::deleteDirectory($tempRoot);
        }
        $this->log("üóë –ê—Ä—Ö–∏–≤ –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã", 'success');

        $this->log('üß© –£—Å—Ç–∞–Ω–æ–≤–∫–∞ (–ø–æ–¥—Å–∫–∞–∑–∫–∞):', 'success');
        $this->log("‚Äî –î–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:  python3 -m pip install --user ".escapeshellarg($targetDir));
        $this->log(
            "‚Äî –ß–µ—Ä–µ–∑ venv:  python3 -m venv /opt/electrum && /opt/electrum/bin/pip install ".escapeshellarg($targetDir)
        );

        $this->log('‚úÖ Electrum –∑–∞–≥—Ä—É–∂–µ–Ω –∏ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω –≤ storage/app/electrum!', 'success');
        return true;
    }

    /** –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç–∞–±–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é Electrum */
    protected function resolveVersion(): ?string
    {
        if (!empty($this->version)) {
            return ltrim($this->version, 'v');
        }

        $indexUrl = 'https://download.electrum.org/';
        $html = $this->httpGet($indexUrl);
        if (!$html) {
            return null;
        }

        // —Å—Å—ã–ª–∫–∏ –≤–∏–¥–∞: href="4.6.1/"
        preg_match_all('#href="(\d+\.\d+(?:\.\d+)?)/"#', $html, $m);
        if (empty($m[1])) {
            return null;
        }

        $candidates = array_unique($m[1]);
        $candidates = array_filter($candidates, fn($v) => !preg_match('/rc|dev|beta/i', $v));

        usort($candidates, 'version_compare');
        return end($candidates) ?: null;
    }

    protected function getPlatformFilename(string $version): ?string
    {
        return "Electrum-{$version}.tar.gz";
    }

    /* ===================== HTTP/–∑–∞–≥—Ä—É–∑–∫–∞ ===================== */

    protected function httpGet(string $url, int $timeout = 20): ?string
    {
        $ch = curl_init($url);
        curl_setopt_array($ch, [
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_FOLLOWLOCATION => true,
            CURLOPT_CONNECTTIMEOUT => $timeout,
            CURLOPT_TIMEOUT => $timeout,
            CURLOPT_USERAGENT => 'ItHealerElectrumInstaller/1.0',
        ]);
        $data = curl_exec($ch);
        $code = curl_getinfo($ch, CURLINFO_HTTP_CODE);
        if ($data === false || $code < 200 || $code >= 300) {
            $err = curl_error($ch);
            curl_close($ch);
            $this->log("‚ö†Ô∏è HTTP GET fail: $url (code: $code; $err)", 'error');
            return null;
        }
        curl_close($ch);
        return $data;
    }

    protected function downloadWithProgress(string $url, string $destination): void
    {
        $dir = dirname($destination);
        if (!is_dir($dir)) {
            File::makeDirectory($dir, 0755, true, true);
        }

        $fp = fopen($destination, 'w+');
        if (!$fp) {
            throw new \RuntimeException("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø–∏—Å–∏: $destination");
        }

        $ch = curl_init($url);
        curl_setopt_array($ch, [
            CURLOPT_FILE => $fp,
            CURLOPT_FOLLOWLOCATION => true,
            CURLOPT_NOPROGRESS => false,
            CURLOPT_PROGRESSFUNCTION => function ($resource, float $dlTotal, float $dlNow) {
                if ($dlTotal > 0) {
                    $percent = round($dlNow * 100 / $dlTotal, 1);
                    echo "\rüì¶ –ü—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏: {$percent}%";
                }
            },
            CURLOPT_USERAGENT => 'ItHealerElectrumInstaller/1.0',
        ]);

        $result = curl_exec($ch);
        if ($result === false) {
            $err = curl_error($ch);
            curl_close($ch);
            fclose($fp);
            throw new \RuntimeException("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏: $err");
        }

        curl_close($ch);
        fclose($fp);
        echo "\n";
    }
}